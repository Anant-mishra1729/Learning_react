{"version":3,"sources":["components/About.js","components/Form.js","components/success.svg","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","myStyle","setMyStyle","btnText","setBtnText","className","style","id","type","onClick","Textform","props","headingStyle","mode","textStyle","countWords","text","split","length","modifyText","value","placeholder","onChange","event","target","rows","toUpperCase","showAlert","toLowerCase","replace","time_min","sec","toFixed","Math","floor","readTime","_path","Navbar","title","to","toggleMode","htmlFor","defaultProps","_excluded","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSuccess","_ref","svgRef","titleId","xmlns","width","height","fill","viewBox","role","ref","d","ForwardRef","Alert","alert","message","App","msg","setAlert","setTimeout","setMode","aboutText","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7789c823.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  });\r\n  const [btnText, setBtnText] = useState(\"Enable Dark mode\");\r\n\r\n  const changeStyle = () =>{\r\n    // Setting light mode\r\n    if(myStyle.color === \"white\"){\r\n        setMyStyle({\r\n            color: \"black\",\r\n            backgroundColor: \"white\",\r\n        })\r\n        setBtnText(\"Enable Dark mode\");\r\n    }\r\n    // Setting dark mode\r\n    else\r\n    {\r\n        setMyStyle({\r\n            color: \"white\",\r\n            backgroundColor: \"black\"\r\n        })\r\n        setBtnText(\"Enable Light mode\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container my-3\" style={myStyle}>\r\n      <h1>About us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"my-3\">\r\n        <button className=\"btn btn-primary\" onClick={changeStyle}>{btnText}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\n// Usestate -> Hooks => For handling states in functional based components\r\n\r\nexport default function Textform(props) {\r\n  const headingStyle = { color: props.mode === \"light\" ? \"black\" : \"orange\" };\r\n  const textStyle = { color: props.mode === \"light\" ? \"black\" : \"white\" };\r\n\r\n  // Convert to uppercase\r\n  const handleUpClick = () => {\r\n    modifyText(text.toUpperCase());\r\n    props.showAlert(\"Text is capitalized\",\"secondary\");\r\n  };\r\n\r\n  const removeExtraSpaces = () => {\r\n    modifyText(text.replace(/\\s\\s+/g, \" \"));\r\n    props.showAlert(\"Extra spaces removed\",\"secondary\");\r\n  };\r\n\r\n  // Counting words\r\n  const countWords = () => {\r\n    let matches = text.split(/[^\\s]+/).length - 1;\r\n    return matches;\r\n  };\r\n\r\n  // Reading time\r\n  const readTime = () => {\r\n    let time_min = countWords() * 0.008;\r\n    let sec = time_min * 60;\r\n    if (time_min < 1) {\r\n      return sec.toFixed(2) + \" seconds\";\r\n    } else {\r\n      return (\r\n        Math.floor(time_min) + \" minute \" + (sec % 60).toFixed(2) + \" seconds\"\r\n      );\r\n    }\r\n  };\r\n\r\n  // Convert to lowercase\r\n  const handleLowClick = () => {\r\n    modifyText(text.toLowerCase());\r\n    props.showAlert(\"Text converted to lower case\",\"secondary\");\r\n  };\r\n\r\n  // Clear text\r\n  const clearText = () => {\r\n    modifyText(\"\");\r\n    props.showAlert(\"Reset completed \",\"danger\");\r\n  };\r\n\r\n  // Without this you can't write in text area\r\n  const handleOnChange = (event) => {\r\n    modifyText(event.target.value);\r\n  };\r\n\r\n  // Using hook\r\n  const [text, modifyText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            placeholder=\"Enter your text here...\"\r\n            onChange={handleOnChange}\r\n            id=\"myText\"\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"#f8f9fa\" : \"rgb(33 37 41)\",\r\n              color :props.mode === \"light\" ? \"rgb(33 37 41)\" : \"#f8f9fa\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary mx-1 my-2\"\r\n          id=\"toUpper\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to uppercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          id=\"toUpper\"\r\n          onClick={handleLowClick}\r\n        >\r\n          Convert to lowercase\r\n        </button>\r\n        <button className=\"btn btn-secondary mx-2\" onClick={removeExtraSpaces}>\r\n          Remove whitespaces\r\n        </button>\r\n        <button className=\"btn btn-danger\" onClick={clearText}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-2\">\r\n        <h1 style={headingStyle}>Summary</h1>\r\n        <p style={textStyle}>Words : {countWords()}</p>\r\n        <p style={textStyle}>Characters : {text.length}</p>\r\n        <p style={textStyle}>\r\n          Avg reading time (130wpm) : <span id=\"readTime\">{readTime()}</span>\r\n        </p>\r\n      </div>\r\n      <div className=\"container my-2\">\r\n        <h1 style={headingStyle}>Preview</h1>\r\n        <p style={textStyle}>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSuccess(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"currentColor\",\n    className: \"bi bi-exclamation-triangle-fill flex-shrink-0 me-2\",\n    viewBox: \"0 0 16 16\",\n    role: \"img\",\n    \"aria-label\": \"Success:\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSuccess);\nexport default __webpack_public_path__ + \"static/media/success.c4a8b0b3.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n// React functional component\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <div className=\"navbar-brand\" >\r\n            {props.title}\r\n          </div>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\r\n                  About us\r\n                </Link>\r\n              </li>\r\n              \r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"modeCheckBox\"\r\n                onClick = {props.toggleMode}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                {props.mode ==='light'?'Dark':'Light'} mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title\",\r\n};\r\n","import React from \"react\";\r\nimport { ReactComponent as Logo } from './success.svg';\r\n\r\nexport default function Alert(props) {\r\n\r\n  return (\r\n    //  if props.alert == null then no return else return\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <Logo/>{props.alert.message}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","// import './App.css';\nimport About from \"./components/About\";\nimport Textform from \"./components/Form\";\nimport Navbar from \"./components/Navbar\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// Importing react router -> Used to change contents of page without reloading page\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nfunction App() {\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#292C35\";\n      showAlert(\"Dark mode is enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#fff\";\n      showAlert(\"Light mode is enabled\", \"success\");\n    }\n  };\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      message: msg,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 500);\n  };\n\n  const [mode, setMode] = useState(\"light\"); // Hook for dark mode\n  const [alert, setAlert] = useState(null);\n\n  return (\n    <Router>\n      <Navbar\n        title=\"Texter\"\n        aboutText=\"About us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n\n          <Route exact path=\"/\">\n            <Textform mode={mode} showAlert={showAlert} />\n          </Route>\n\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}